class Node:
    def __init__(self,data):
        self.data=data
        self.next=None

class linked_list:
    def __init__(self):
        self.head=None

# Adds new node containing 'data' to the end of the linked list.
    def append(self,data):
        new_node = Node(data) 
  
        # 4. If the Linked List is empty, then make the 
        #    new node as head 
        if self.head is None: 
            self.head = new_node 
            return
  
        # 5. Else traverse till the last node 
        last = self.head 
        while (last.next): 
            last = last.next
  
        # 6. Change the next of last node 
        last.next =  new_node 
   #Adds to the head of the list.
    def appendhead(self,data):
        new_node=Node(data)
        new_node.next=self.head
        self.head=new_node
    def insertnodeatposition(self,data,position):
        node1=Node(data)
        if(position==1):
            self.head=node1
            return
        node2=self.head
        for i in range(0,position-1):
            node2=node2.next
        node1.next=node2.next
        node2.next=node1
        return self.head
    
    def display(self):
        temp=self.head
        while(temp):
            print(temp.data)
            temp=temp.next
            
        
      
        
my_list=linked_list()
my_list.append(1)
my_list.display()
my_list.appendhead(2)
my_list.display()
my_list.appendhead(3)
my_list.display()
my_list.insertnodeatposition(4,3)
my_list.display()
